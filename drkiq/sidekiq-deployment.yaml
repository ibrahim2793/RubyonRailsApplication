apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: sidekiq
  labels:
    app: sidekiq
spec:
  replicas: 2
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: sidekiq
    spec:
      containers:
      - args:
        - bundle
        - exec
        - sidekiq
        - -C
        - bin/
        image: rails:v3
        name: sidekiq
        env:
          # $ kubectl create secret generic mysql-pass --from-file=password.txt
          # make sure password.txt does not have a trailing newline
        - name: SECRET_TOKEN
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: WORKER_PROCESSES
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: LISTEN_ON
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: CACHE_URL
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: JOB_WORKER_URL
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        - name: INSTALL_PATH
          valueFrom:
            secretKeyRef:
              name: envsecret
              key: env-var.txt
        resources: {}
        volumeMounts:
        - mountPath: /drkiq
          name: drkiq-claim1
      volumes:
      - name: drkiq-claim1
        persistentVolumeClaim:
          claimName: drkiq-claim1
status: {}
